name: Deploy Staging

on:
  push:
    branches: [staging]
  pull_request:
    branches: [staging]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_STAGING_PROJECT_ID }}

jobs:
  Test:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: staging
      DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
      NEXTAUTH_SECRET: ${{ secrets.STAGING_NEXTAUTH_SECRET }}
      NEXTAUTH_URL: ${{ secrets.STAGING_NEXTAUTH_URL }}
      SENDGRID_API_KEY: ${{ secrets.STAGING_SENDGRID_API_KEY }}
      EMAIL_FROM: ${{ secrets.STAGING_EMAIL_FROM }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate Prisma Client
        run: npx prisma generate
        
      - name: Run tests
        run: npm test

  Deploy-Staging:
    needs: [Test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Pull Vercel Environment Information (Staging)
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }} --scope=${{ secrets.VERCEL_ORG_ID }}
        
      - name: Build Project Artifacts (Staging)
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Deploy to Staging
        run: |
          if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
            vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --target=staging
          fi
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_STAGING_PROJECT_ID }}
          
      - name: Comment PR with Staging URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Staging deployment ready! Check it out at: https://staging-koobings.vercel.app'
            }) 